version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eyea-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb+srv://admin:ZLwu373CdpGCx8wc@cluster0.rjill6e.mongodb.net/?retrywrites=true&w=majority&appName=Cluster0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - API_KEY=eyea-api-key-2024
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000,http://apieyeamembership.eyea.et,https://apieyeamembership.eyea.et
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - frontend
    networks:
      - eyea-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: eyea-frontend
    ports:
      - "4000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://apieyeamembership.eyea.et/v1
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - eyea-network
    restart: unless-stopped

  # Development MongoDB (optional - for local development)
  mongodb-local:
    image: mongo:latest
    container_name: eyea-mongodb-local
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=eyea_db
    volumes:
      - mongodb_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - eyea-network
    profiles:
      - local-dev
    restart: unless-stopped

  # Redis for caching and sessions (optional)
  redis:
    image: redis:alpine
    container_name: eyea-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eyea-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: eyea-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - eyea-network
    profiles:
      - production
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  eyea-network:
    driver: bridge 